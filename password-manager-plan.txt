The password manager application plan:
1 - Utility function to be unit-tested independentaly
    1-1 - Entry script
        - ask to input identifier
        - validate if identifier is already existing, if exisitng we give message saying identifier already exists, else we ask for user name and password,
        - saves the input as a secret in aws secrests manager
        - input identifier function
        - creadetials function
        - save entries function
    1-2 - list function
        - retrieve a list of all secrets identifiers
    1-3 - retrieval function
        - prompt a user to specify a secret to retrieve
        - if does not exist give message stating id is not found, else we continue
        - retrieves a text file which contains the secret user name and password  
    1-4 - delete function
        - prompt a user to specify a secret to delete by entering secret identifier
        - take the secret off the list
        - confirm deletion with a proper message
    1-5 - exit function
        - closes the main function with ending message
    1-6 - Unit Testing
    1-7 - Error and exception handling 
2 - Main application/function
    - select service function - 
        - show a list of actions, and asks the user to select which action he wants to accomplish
    - invoke Utility functions
    - run integration testing
    - error and exceptions handling

to do list:
1- mock testing
2- error handling
    
